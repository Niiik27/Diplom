"""
Django settings for _Brigada73 project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import re
from pathlib import Path


import APP_NAMES

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-nuqcc@tw02x8roe-j-tu3m*7n2$n0m0%_uzxeow3%!3ay0_&45'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [


    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'daphne',
    'django.contrib.staticfiles',

    APP_NAMES.HOME[APP_NAMES.NAME],
    APP_NAMES.PROFILE[APP_NAMES.NAME],
    APP_NAMES.PORTFOLIO[APP_NAMES.NAME],
    APP_NAMES.MESSAGE[APP_NAMES.NAME],
    APP_NAMES.ORDERS[APP_NAMES.NAME],
    APP_NAMES.TEAMS[APP_NAMES.NAME],

    # 'rest_framework_simplejwt',

    'channels',
    'channels_redis',
]

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer',  # Используйте InMemoryChannelLayer для тестов
        # 'BACKEND': 'channels_redis.core.RedisChannelLayer',  # для использования Redis
        # 'CONFIG': {
        #     'hosts': [('127.0.0.1', 6379)],#6379
        #     "channel_capacity": {
        #         "http.request": 200,
        #         "http.response!*": 10,
        #         re.compile(r"^websocket.send\!.+"): 20,
        #     },
        #     # "on_disconnect": "redis.disconnect",
        #     "symmetric_encryption_keys": [SECRET_KEY],
        # },
    },
}

# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#     ),
# }


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = '_Brigada73.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = '_Brigada73.wsgi.application'
ASGI_APPLICATION = '_Brigada73.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators
AUTH_USER_MODEL = f'{APP_NAMES.PROFILE[APP_NAMES.NAME]}.CustomUser'
LOGOUT_REDIRECT_URL = '/'
# LOGIN_REDIRECT_URL = '/'#на пустую страницу тоесть домашнюю
AUTH_PASSWORD_VALIDATORS1111111111111111111111111 = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / "static",
    # "/var/www/static/",
]

MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR/MEDIA_URL

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# DJANGO_SUPERUSER_PASSWORD = 'admin'
# python manage.py createsuperuser --username=admin --email=admin@example.com --noinput